{
  "swagger" : "2.0",
  "info" : {
    "version" : "1",
    "title" : "Executions",
    "description" : "Enables you to manage executions by triggering new ones, querying their data or requesting different actions on them. You can configure triggers to react on events from sources like Alert Notification, Dynatrace, Pingdom and more.",
    "termsOfService" : "http://www.sap.com"
  },
  "x-sap-shortText" : "Manage executions by triggering new ones, reading their data or requesting actions on them.",
  "x-servers" : [ {
    "url" : "https://{landscape}.autopilot.ondemand.com/api/v1",
    "description" : "SAP Automation Pilot REST API Endpoint",
    "templates" : {
      "landscape" : {
        "enum" : [ "eu10", "ap10", "ap21", "us30" ],
        "default" : "eu10",
        "description" : "SAP Business Technology Platform Region"
      }
    }
  } ],
  "securityDefinitions" : {
    "BasicAuth" : {
      "type" : "basic",
      "description" : "The Executions API is secured by Basic Authentication. The available permissions are 'Read','Write' and 'Execute'."
    }
  },
  "security" : [ {
    "BasicAuth" : [ ]
  } ],
  "tags" : [ {
    "name" : "Executions"
  }, {
    "name" : "Actions"
  }, {
    "name" : "Event Triggers"
  }, {
    "name" : "Execution Logs"
  } ],
  "host" : "hostname",
  "basePath" : "/api/v1",
  "schemes" : [ "https" ],
  "paths" : {
    "/executions" : {
      "get" : {
        "operationId" : "listExecutions",
        "summary" : "Retrieves executions",
        "description" : "Retrieves all executions owned by the tenant.<br/><br/>Required permissions: Read",
        "tags" : [ "Executions" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "tag",
          "in" : "query",
          "description" : "Optional key-value pairs used to filter executions.",
          "required" : false,
          "type" : "array",
          "collectionFormat" : "multi",
          "maxItems" : 128,
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Executions retrieved successfully.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/execution"
              }
            }
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 429,
                "message" : "You have exceeded your request quota for this API"
              }
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      },
      "post" : {
        "operationId" : "triggerExecution",
        "summary" : "Triggers an execution",
        "description" : "Triggers a new execution from the specified command.<br/><br/>Required permissions: Execute",
        "tags" : [ "Executions" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "consumes" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "request",
          "in" : "body",
          "description" : "The information that is needed to trigger the execution.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/executionRequest"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Execution request was accepted by the server.",
            "schema" : {
              "$ref" : "#/definitions/execution"
            }
          },
          "400" : {
            "description" : "Your input data is either invalid or in an inconsistent format. Please check it and try again. You can also check the response payload for more information.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 400,
                "message" : "Input key 'password' is required but not provided"
              }
            }
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "409" : {
            "description" : "The command that you want to execute is not in a valid state. Please check it and try again. You can also check the response payload for more information.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 409,
                "message" : "Referenced command does not exist"
              }
            }
          },
          "413" : {
            "description" : "The size of the provided execution input is larger than limits defined by server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 413,
                "message" : "The execution created from this request will be too large. Cannot proceed"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 429,
                "message" : "You have exceeded your request quota for this API"
              }
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    },
    "/executions/{executionId}" : {
      "get" : {
        "operationId" : "getExecution",
        "summary" : "Retrieves an execution",
        "description" : "Retrieves detailed information about a single execution.<br/><br/>Required permissions: Read",
        "tags" : [ "Executions" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "executionId",
          "in" : "path",
          "description" : "Identifier of an execution.",
          "required" : true,
          "type" : "string",
          "maxLength" : 256
        } ],
        "responses" : {
          "200" : {
            "description" : "Execution retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/detailedExecution"
            }
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "404" : {
            "description" : "The specified execution does not exist.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 404,
                "message" : "Execution 'T000000R0-0000001605977606908-1-1' does not exist"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 429,
                "message" : "You have exceeded your request quota for this API"
              }
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      },
      "delete" : {
        "operationId" : "deleteExecution",
        "summary" : "Delete a completed execution",
        "description" : "Delete a single completed execution.<br/><br/>Required permissions: Write",
        "tags" : [ "Executions" ],
        "parameters" : [ {
          "name" : "executionId",
          "in" : "path",
          "description" : "Identifier of an execution.",
          "required" : true,
          "type" : "string",
          "maxLength" : 256
        } ],
        "produces" : [ "application/json;charset=utf-8" ],
        "responses" : {
          "204" : {
            "description" : "Execution deleted successfully."
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "409" : {
            "description" : "The execution cannot be deleted because it is in active state.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 409,
                "message" : "Execution 'T000000R0-0000001605977606908-1-1' cannot be deleted because it is in state PAUSED"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 429,
                "message" : "You have exceeded your request quota for this API"
              }
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    },
    "/executions/{executionId}/input" : {
      "get" : {
        "operationId" : "getInput",
        "summary" : "Retrieves input of an execution",
        "description" : "Retrieves the input of a single execution. Only values of non-sensitive input keys will be part of the response.<br/><br/>Required permissions: Read",
        "tags" : [ "Executions" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "executionId",
          "description" : "Identifier of an execution.",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "maxLength" : 256
        } ],
        "responses" : {
          "200" : {
            "description" : "Execution input retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/executionInput"
            }
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "404" : {
            "description" : "The specified execution does not exist.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 404,
                "message" : "Execution 'T000000R0-0000001605977606908-1-1' does not exist"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 429,
                "message" : "You have exceeded your request quota for this API"
              }
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    },
    "/executions/{executionId}/output" : {
      "get" : {
        "operationId" : "getOutput",
        "summary" : "Retrieves output of an execution",
        "description" : "Retrieves the output of a single execution with `FINISHED` status. Only values of non-sensitive output keys will be part of the response.<br/><br/>Required permissions: Read",
        "tags" : [ "Executions" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "executionId",
          "in" : "path",
          "description" : "Identifier of an execution.",
          "required" : true,
          "type" : "string",
          "maxLength" : 256
        } ],
        "responses" : {
          "200" : {
            "description" : "Execution output retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/executionOutput"
            }
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "404" : {
            "description" : "The specified execution does not exist or is not with `FINISHED` status.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 404,
                "message" : "Execution 'T000000R0-0000001605977606908-1-1' does not exist"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 429,
                "message" : "You have exceeded your request quota for this API"
              }
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    },
    "/executions/{executionId}/actions" : {
      "get" : {
        "operationId" : "listActions",
        "summary" : "Retrieves actions requested for an execution",
        "description" : "Retrieves all actions requested for a single execution.<br/><br/>Required permissions: Read",
        "tags" : [ "Actions" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "executionId",
          "in" : "path",
          "description" : "Identifier of an execution.",
          "required" : true,
          "type" : "string",
          "maxLength" : 256
        } ],
        "responses" : {
          "200" : {
            "description" : "Actions retrieved successfully.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/action"
              }
            }
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "404" : {
            "description" : "The specified execution does not exist.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 404,
                "message" : "Execution 'T000000R0-0000001605977606908-1-1' does not exist"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 429,
                "message" : "You have exceeded your request quota for this API"
              }
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      },
      "post" : {
        "operationId" : "requestAction",
        "summary" : "Requests action for an execution",
        "description" : "Requests a new action for a single execution.<br/><br/>Required permissions: Execute",
        "tags" : [ "Actions" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "consumes" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "executionId",
          "in" : "path",
          "description" : "Identifier of an execution.",
          "required" : true,
          "type" : "string",
          "maxLength" : 256
        }, {
          "name" : "action",
          "in" : "body",
          "description" : "Details of an action to be performed.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/action"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Action request was accepted by the server.",
            "schema" : {
              "$ref" : "#/definitions/action"
            }
          },
          "400" : {
            "description" : "Your input data is either invalid or in an inconsistent format. Please check it and try again. You can also check the response payload for more information.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 400,
                "message" : "The selected option 'restart' is not part of the predefined ones"
              }
            }
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "404" : {
            "description" : "The specified execution does not exist.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 404,
                "message" : "Execution 'T000000R0-0000001605977606908-1-1' does not exist"
              }
            }
          },
          "409" : {
            "description" : "You cannot request the specified action on an execution with such status.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 409,
                "message" : "PAUSE action is not allowed for FAILED executions"
              }
            }
          },
          "413" : {
            "description" : "The size of the provided action value is larger than limits defined by server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 413,
                "message" : "Maximum action value size exceeded"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 429,
                "message" : "You have exceeded your request quota for this API"
              }
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    },
    "/triggers/ans-event" : {
      "post" : {
        "operationId" : "triggerAnsEventExecution",
        "summary" : "Triggers an execution based on an Alert Notification event",
        "description" : "Triggers a new execution from the specified command based on Alert Notification event.<br/><br/>Required permissions: Execute",
        "tags" : [ "Event Triggers" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "consumes" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "event",
          "in" : "body",
          "description" : "Details of an Alert Notification event.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/event"
          }
        }, {
          "name" : "commandReference",
          "in" : "query",
          "description" : "Identifier of a command to execute.",
          "required" : true,
          "type" : "string",
          "maxLength" : 256
        }, {
          "name" : "inputReference",
          "in" : "query",
          "description" : "Identifiers of inputs to be used for values.",
          "required" : false,
          "type" : "array",
          "collectionFormat" : "multi",
          "maxItems" : 64,
          "items" : {
            "type" : "string",
            "maxLength" : 256
          }
        }, {
          "name" : "correlationId",
          "in" : "query",
          "description" : "Identifier that enables references to other actions and executions.",
          "required" : false,
          "type" : "string",
          "maxLength" : 256
        }, {
          "name" : "subAccount",
          "in" : "query",
          "description" : "Identifies the subaccount of the affected resource. If not specified, it will be derived from the event.",
          "required" : false,
          "type" : "string",
          "maxLength" : 256
        }, {
          "name" : "resourceGroup",
          "in" : "query",
          "description" : "Identifies an additional resource isolation level. If not specified, it will be derived from the event.",
          "required" : false,
          "type" : "string",
          "maxLength" : 256
        }, {
          "name" : "resourceName",
          "description" : "Name of the affected resource. If not specified, it will be derived from the event.",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "maxLength" : 256
        }, {
          "name" : "resourceInstance",
          "in" : "query",
          "description" : "If the resource has multiple instances, this identifies the specific instance. If not specified, it will be derived from the event.",
          "required" : false,
          "type" : "string",
          "maxLength" : 256
        }, {
          "name" : "disableResourcePropertiesMapping",
          "in" : "query",
          "description" : "Specifies whether the resource properties `globalAccount`, `subAccount`, `resourceGroup`, `resourceName`, `resourceType` and `resourceInstance` should be derived from the event.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "disableRegionPropertiesMapping",
          "in" : "query",
          "description" : "Specifies whether the properties `region` and `regionType` should be derived from the event.",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "mapEventToInputKey",
          "in" : "query",
          "description" : "Specifies the input key to which the value of the event should be forwarded.",
          "required" : false,
          "type" : "string",
          "maxLength" : 32
        }, {
          "name" : "tags",
          "in" : "query",
          "description" : "Optional key-value pairs providing additional information. Please use `tag` as this query parameter is deprecated.",
          "required" : false,
          "type" : "array",
          "collectionFormat" : "multi",
          "maxItems" : 128,
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Optional key-value pairs providing additional information.",
          "required" : false,
          "type" : "array",
          "collectionFormat" : "multi",
          "maxItems" : 128,
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Execution request was accepted by the server.",
            "schema" : {
              "$ref" : "#/definitions/execution"
            }
          },
          "400" : {
            "description" : "Your input data is either invalid or in an inconsistent format. Please check it and try again. You can also check the response payload for more information.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 400,
                "message" : "Input key 'password' is required but not provided"
              }
            }
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "409" : {
            "description" : "The command that you want to execute is in invalid state. Please fix it and try again. You can check the response payload for more information.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 409,
                "message" : "Referenced command does not exist"
              }
            }
          },
          "413" : {
            "description" : "The size of the provided execution input is larger than limits defined by server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 413,
                "message" : "The execution created from this request will be too large. Cannot proceed"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 429,
                "message" : "You have exceeded your request quota for this API"
              }
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    },
    "/triggers/generic-event" : {
      "post" : {
        "operationId" : "triggerGenericEventExecution",
        "summary" : "Triggers an execution based on any event",
        "description" : "Triggers a new execution from the specified command based on any event.<br/><br/>Required permissions: Execute",
        "tags" : [ "Event Triggers" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "consumes" : [ ],
        "parameters" : [ {
          "name" : "event",
          "in" : "body",
          "description" : "Details of an event in any format.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commandReference",
          "in" : "query",
          "description" : "Identifier of a command to execute.",
          "required" : true,
          "type" : "string",
          "maxLength" : 256
        }, {
          "name" : "inputReference",
          "in" : "query",
          "description" : "Identifiers of inputs to be used for values.",
          "required" : false,
          "type" : "array",
          "collectionFormat" : "multi",
          "maxItems" : 64,
          "items" : {
            "type" : "string",
            "maxLength" : 256
          }
        }, {
          "name" : "correlationId",
          "in" : "query",
          "description" : "Identifier that enables references to other actions and executions.",
          "required" : false,
          "type" : "string",
          "maxLength" : 256
        }, {
          "name" : "mapEventToInputKey",
          "in" : "query",
          "description" : "Specifies the input key to which the value of the event should be forwarded.",
          "required" : false,
          "type" : "string",
          "maxLength" : 32
        }, {
          "name" : "tags",
          "in" : "query",
          "description" : "Optional key-value pairs providing additional information. Please use `tag` as this query parameter is deprecated.",
          "required" : false,
          "type" : "array",
          "collectionFormat" : "multi",
          "maxItems" : 128,
          "items" : {
            "type" : "string"
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "description" : "Optional key-value pairs providing additional information.",
          "required" : false,
          "type" : "array",
          "collectionFormat" : "multi",
          "maxItems" : 128,
          "items" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Execution request was accepted by the server.",
            "schema" : {
              "$ref" : "#/definitions/execution"
            }
          },
          "400" : {
            "description" : "Your input data is either invalid or in an inconsistent format. Please check it and try again. You can also check the response payload for more information.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 400,
                "message" : "Input key 'password' is required but not provided"
              }
            }
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "409" : {
            "description" : "The command that you want to execute is in invalid state. Please fix it and try again. You can check the response payload for more information.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 409,
                "message" : "Referenced command does not exist"
              }
            }
          },
          "413" : {
            "description" : "The size of the provided execution input is larger than limits defined by server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 413,
                "message" : "The execution created from this request will be too large. Cannot proceed"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    },
    "/executions/{id}/logs/{executorPath}" : {
      "get" : {
        "operationId" : "getExecutionLog",
        "summary" : "Retrieves an execution log",
        "description" : "Retrieves the execution log for a single executor. <br/><br/>Required permissions: Read",
        "tags" : [ "Execution Logs" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier of an execution.",
          "required" : true,
          "type" : "string",
          "maxLength" : 256
        }, {
          "name" : "executorPath",
          "in" : "path",
          "description" : "Path to an executor.",
          "required" : true,
          "type" : "string",
          "maxLength" : 1024
        } ],
        "responses" : {
          "200" : {
            "description" : "Execution log retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/executionLog"
            }
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "404" : {
            "description" : "The specified execution or executor does not exist.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 404,
                "message" : "Execution 'T000000R0-0000001605977606908-1-1' does not exist"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 429,
                "message" : "You have exceeded your request quota for this API"
              }
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    },
    "/executions/{id}/logs" : {
      "get" : {
        "operationId" : "listExecutionLogs",
        "summary" : "Retrieves execution logs page",
        "description" : "Retrieves executions logs page. <br/><br/>Required permissions: Read",
        "tags" : [ "Execution Logs" ],
        "produces" : [ "application/json;charset=utf-8" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Identifier of an execution.",
          "required" : true,
          "type" : "string",
          "maxLength" : 256
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Required page number.",
          "required" : false,
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "maximum" : 10000,
          "default" : 0
        }, {
          "name" : "maxPageSize",
          "in" : "query",
          "description" : "Maximum number of results returned for the page.",
          "required" : false,
          "type" : "integer",
          "format" : "int32",
          "minimum" : 0,
          "maximum" : 20,
          "default" : 10
        } ],
        "responses" : {
          "200" : {
            "description" : "Execution logs page retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/executionLogsPage"
            }
          },
          "401" : {
            "description" : "The provided credentials are unauthorized.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 401,
                "message" : "Bad credentials"
              }
            }
          },
          "403" : {
            "description" : "You do not have the necessary authorization as defined by the permissions assigned to your user.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 403,
                "message" : "Access is denied"
              }
            }
          },
          "404" : {
            "description" : "The specified execution or executor does not exist.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 404,
                "message" : "Execution 'T000000R0-0000001605977606908-1-1' does not exist"
              }
            }
          },
          "429" : {
            "description" : "You have exceeded your request quota for this API",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 429,
                "message" : "You have exceeded your request quota for this API"
              }
            }
          },
          "500" : {
            "description" : "There was an error on the server side. If the problem persists, please report the error as described by SAP.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 500,
                "message" : "Internal Server Error"
              }
            }
          },
          "503" : {
            "description" : "The server is currently unable to handle the request due to a temporary overload or maintenance of the server.",
            "schema" : {
              "$ref" : "#/definitions/error"
            },
            "examples" : {
              "application/json;charset=utf-8" : {
                "code" : 503,
                "message" : "The service is temporarily unavailable"
              }
            }
          }
        },
        "security" : [ {
          "BasicAuth" : [ ]
        } ]
      }
    }
  },
  "definitions" : {
    "executionRequest" : {
      "title" : "ExecutionRequest",
      "description" : "Entity which describes how an execution should be triggered.",
      "type" : "object",
      "required" : [ "commandId" ],
      "properties" : {
        "commandId" : {
          "description" : "Identifier of a command which will be used to trigger the execution.",
          "type" : "string",
          "maxLength" : 256
        },
        "correlationId" : {
          "description" : "Identifier which allows reference to other executions and actions.",
          "type" : "string",
          "maxLength" : 256
        },
        "inputReferences" : {
          "description" : "Identifiers of inputs to be used for values.",
          "type" : "array",
          "items" : {
            "type" : "string",
            "maxLength" : 256
          }
        },
        "inputValues" : {
          "description" : "Values which will be used as an input to the execution.",
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "tags" : {
          "description" : "Optional key-value pairs providing additional information.",
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "example" : {
        "commandId" : "dblm-sapcp:RestartHanaCloudInstance:1",
        "inputReferences" : [ "credentials-T000000R0:TechnicalUser:1" ],
        "inputValues" : {
          "subAccount" : "prod-org",
          "region" : "cf-eu10",
          "resourceGroup" : "prod-space",
          "resourceName" : "prod-hana"
        },
        "tags" : {
          "environment" : "production",
          "feature:priority" : "high"
        }
      }
    },
    "execution" : {
      "title" : "Execution",
      "description" : "Entity which represents an execution.",
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identifier of the execution.",
          "readOnly" : true
        },
        "commandId" : {
          "type" : "string",
          "description" : "Identifier of the command which was used to trigger the execution.",
          "readOnly" : true
        },
        "originatorId" : {
          "type" : "string",
          "description" : "Identifier of the initiator of the execution.",
          "readOnly" : true
        },
        "tenantId" : {
          "type" : "string",
          "description" : "Identifier of the tenant from which the execution was triggered.",
          "readOnly" : true
        },
        "correlationId" : {
          "type" : "string",
          "description" : "Identifier which allows reference to other executions and actions.",
          "readOnly" : true
        },
        "tags" : {
          "type" : "object",
          "description" : "Optional key-value pairs providing additional information.",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "startTime" : {
          "type" : "integer",
          "description" : "Time at which the execution was started. Format is in milliseconds since Unix epoch.",
          "format" : "int64",
          "readOnly" : true
        },
        "modificationTime" : {
          "type" : "integer",
          "description" : "Time at which the execution was last modified. Format is in milliseconds since Unix epoch.",
          "format" : "int64",
          "readOnly" : true
        },
        "status" : {
          "$ref" : "#/definitions/executionStatus",
          "readOnly" : true
        },
        "progress" : {
          "type" : "integer",
          "description" : "Number which shows the current execution progress. Value is between 1 and 100.",
          "format" : "int32",
          "minimum" : 1,
          "maximum" : 100,
          "readOnly" : true
        },
        "progressMessage" : {
          "type" : "string",
          "description" : "Message which provides more information about the current execution progress",
          "readOnly" : true
        },
        "size" : {
          "type" : "integer",
          "description" : "Memory in bytes that is being used by the execution. If the execution exceeds 2883584 bytes (2.75 MiB) in usage it will be suspended.",
          "format" : "int64",
          "readOnly" : true
        },
        "usedQuota" : {
          "type" : "integer",
          "description" : "Number of API calls that were made by the execution.",
          "format" : "int64",
          "readOnly" : true
        }
      },
      "example" : {
        "id" : "T000000R0-0000001605977606908-1-1",
        "commandId" : "dblm-sapcp:RestartHanaCloudInstance:1",
        "originatorId" : "john.doe@sap.com",
        "tenantId" : "T000000R0",
        "tags" : {
          "feature:priority" : "high",
          "environment" : "production"
        },
        "startTime" : 1605977606954,
        "modificationTime" : 1605977608380,
        "status" : "RUNNING",
        "progress" : 52,
        "progressMessage" : "Stopping HANA Cloud Instance...",
        "size" : 50397,
        "usedQuota" : 29
      }
    },
    "detailedExecution" : {
      "title" : "DetailedExecution",
      "description" : "Entity which contains detailed information about an execution.",
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identifier of the execution.",
          "readOnly" : true
        },
        "commandId" : {
          "type" : "string",
          "description" : "Identifier of the command which was used to trigger the execution.",
          "readOnly" : true
        },
        "originatorId" : {
          "type" : "string",
          "description" : "Identifier of the requester of the execution.",
          "readOnly" : true
        },
        "tenantId" : {
          "type" : "string",
          "description" : "Identifier of the tenant from which the execution was triggered.",
          "readOnly" : true
        },
        "correlationId" : {
          "type" : "string",
          "description" : "Identifier that allows reference to other executions and actions.",
          "readOnly" : true
        },
        "tags" : {
          "type" : "object",
          "description" : "Optional key-value pairs providing additional information.",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "startTime" : {
          "type" : "integer",
          "description" : "Time at which the execution was started. Format is in milliseconds since Unix epoch.",
          "format" : "int64",
          "readOnly" : true
        },
        "modificationTime" : {
          "type" : "integer",
          "description" : "Time at which the execution was last modified. Format is in milliseconds since Unix epoch.",
          "format" : "int64",
          "readOnly" : true
        },
        "status" : {
          "$ref" : "#/definitions/executionStatus",
          "readOnly" : true
        },
        "progress" : {
          "type" : "integer",
          "description" : "Number which shows the current execution progress. Value is between 1 and 100.",
          "format" : "int32",
          "readOnly" : true
        },
        "progressMessage" : {
          "type" : "string",
          "description" : "Message which provides more information about the current execution progress",
          "readOnly" : true
        },
        "size" : {
          "type" : "integer",
          "description" : "Memory in bytes that is being used by the execution. If the execution exceeds 2883584 bytes (2.75 MiB) in usage it will be suspended.",
          "format" : "int64",
          "readOnly" : true
        },
        "usedQuota" : {
          "type" : "integer",
          "description" : "Number of API calls that were made by the execution.",
          "format" : "int64",
          "readOnly" : true
        },
        "error" : {
          "type" : "string",
          "description" : "Message which provides more information about an execution with `FAILED` status.",
          "readOnly" : true
        },
        "userChoice" : {
          "$ref" : "#/definitions/userChoice",
          "description" : "Possible values which can be selected for an execution with `INPUT_REQUIRED` status.",
          "readOnly" : true
        },
        "executors" : {
          "type" : "array",
          "description" : "Collection of all executors which are part of the execution.",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/executorOverview"
          }
        },
        "currentExecutorPath" : {
          "type" : "string",
          "description" : "Path of the executor to which the execution has progressed.",
          "readOnly" : true
        }
      },
      "example" : {
        "id" : "T000000R0-0000001605977606908-1-1",
        "commandId" : "dblm-sapcp:RestartHanaCloudInstance:1",
        "originatorId" : "john.doe@sap.com",
        "tenantId" : "T000000R0",
        "tags" : {
          "feature:priority" : "high",
          "environment" : "production"
        },
        "startTime" : 1605977606954,
        "modificationTime" : 1605977608380,
        "status" : "FAILED",
        "error" : "The provided credentials are unauthorized.",
        "progress" : 52,
        "progressMessage" : "Stopping HANA Cloud Instance...",
        "size" : 50397,
        "usedQuota" : 29,
        "executors" : [ {
          "alias" : "",
          "commandId" : "dblm-sapcp:RestartHanaCloudInstance:1",
          "subExecutors" : [ ]
        } ]
      }
    },
    "executionInput" : {
      "title" : "ExecutionInput",
      "description" : "Values of the non-sensitive input keys which were used to trigger the execution.",
      "type" : "object",
      "properties" : {
        "values" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "example" : {
        "values" : {
          "subAccount" : "prod-org",
          "region" : "cf-eu10",
          "resourceGroup" : "prod-space",
          "resourceName" : "prod-hana",
          "user" : "john.doe@sap.com",
          "password" : null
        }
      }
    },
    "executionOutput" : {
      "title" : "ExecutionOutput",
      "description" : "Values of the non-sensitive output keys which were produced by the execution. Applicable only for executions with `FINISHED` status.",
      "type" : "object",
      "properties" : {
        "values" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "example" : {
        "values" : {
          "name" : "CPU Load",
          "state" : "Ok",
          "value" : 30,
          "unit" : "%",
          "warningThreshold" : 80,
          "errorThreshold" : 90,
          "timestamp" : 1605979111000,
          "output" : "OK CPUValue: 30 (W> 80, C> 90) ",
          "metricType" : "performance"
        }
      }
    },
    "action" : {
      "title" : "Action",
      "description" : "Entity which can be used to control active executions.",
      "type" : "object",
      "required" : [ "type", "reason" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identifier of the action.",
          "readOnly" : true
        },
        "type" : {
          "$ref" : "#/definitions/actionType",
          "description" : "Type of the action."
        },
        "value" : {
          "type" : "string",
          "description" : "Value that is passed along with the action. It is required only for actions of type `RESET` and `CHOOSE`."
        },
        "reason" : {
          "type" : "string",
          "description" : "Reason for requesting the action.",
          "maxLength" : 256
        },
        "correlationId" : {
          "type" : "string",
          "description" : "Identifier that enables references to other actions and executions.",
          "maxLength" : 256
        },
        "originatorId" : {
          "type" : "string",
          "description" : "Identifier of the requester of the action.",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time when the action was requested.",
          "readOnly" : true
        },
        "executorPath" : {
          "type" : "string",
          "description" : "Path to the executor on which the action was requested.",
          "readOnly" : true
        }
      },
      "example" : {
        "id" : "c33524ab5c0a415dae64fe11e4cb90f9",
        "originatorId" : "john.doe@sap.com",
        "type" : "CHOOSE",
        "value" : "restart",
        "reason" : "Database is in downtime. Continuing with the restart to recover it.",
        "createdAt" : 1605248472645,
        "executorPath" : "restartDatabase/operatorDecision"
      }
    },
    "executionLog" : {
      "title" : "ExecutionLog",
      "description" : "Entity which contains log messages of all operations that were performed by an executor.",
      "type" : "object",
      "properties" : {
        "condition" : {
          "$ref" : "#/definitions/executionLogMessage",
          "readOnly" : true
        },
        "pause" : {
          "$ref" : "#/definitions/executionLogMessage",
          "readOnly" : true
        },
        "delay" : {
          "$ref" : "#/definitions/executionLogMessage",
          "readOnly" : true
        },
        "validation" : {
          "$ref" : "#/definitions/executionLogMessage",
          "readOnly" : true
        },
        "retry" : {
          "$ref" : "#/definitions/executionLogMessage",
          "readOnly" : true
        },
        "repetition" : {
          "$ref" : "#/definitions/executionLogMessage",
          "readOnly" : true
        },
        "command" : {
          "$ref" : "#/definitions/executionLogMessage",
          "readOnly" : true
        },
        "statusListener" : {
          "$ref" : "#/definitions/executionLogMessage",
          "readOnly" : true
        },
        "lock" : {
          "$ref" : "#/definitions/executionLogMessage",
          "readOnly" : true
        },
        "progressMessage" : {
          "$ref" : "#/definitions/executionLogMessage",
          "readOnly" : true
        }
      },
      "example" : {
        "condition" : {
          "message" : "Continuing the execution because the condition matched \n Expected conditions: Expecting:\n  <200>\nto be equal to:\n  <200>  ",
          "createdAt" : "1605977606954"
        },
        "pause" : {
          "message" : "Pause was skipped because the condition did not match \n Mismatched values: Expecting:\n  <404>\nto be equal to:\n  <200> ",
          "createdAt" : "1605977606964"
        },
        "delay" : {
          "message" : "Delayed the execution with 5 seconds ",
          "createdAt" : "1605977606974"
        },
        "command" : {
          "message" : "Executing command http-sapcp:HttpRequest:1 \n Input values: {\n  \"method\" : \"GET\",\n  \"url\" : \"https://example.com\",\n  \"timeout\" : \"3\"\n} ",
          "createdAt" : "1605977606984"
        },
        "validation" : {
          "message" : "Validation was successful because the condition matched \n Expected conditions: Expecting:\n  <200>\nto be equal to:\n  <200>",
          "createdAt" : "1605977606994"
        },
        "retry" : {
          "message" : "Auto retry was performed due to failed validation \n Retried the failed execution automatically after a FIXED delay of 5 seconds because the condition matched \n The retry attempt count was 3 out of 4 \n Expected conditions: Expecting:\n  <200>\nto be equal to:\n  <200> ",
          "createdAt" : "1605977607915"
        },
        "repetition" : {
          "message" : "Repeating the execution after 3 seconds delay because the condition was not met \n The repeat attempt count was 1 out of 3 \n Mismatched values: Expecting:\n  <404>\nto be equal to:\n  <200> ",
          "createdAt" : "1605977607954"
        },
        "statusListener" : {
          "message" : "Status change listener for status 'ABORTED' was executed",
          "createdAt" : "1605977607957"
        },
        "lock" : {
          "message" : "Lock E6C416BB-CFBE-4A15-8B42-80607EEF6BA7 has been successfully obtained",
          "createdAt" : "1629289609684"
        },
        "progressMessage" : {
          "message" : "Example progress message",
          "createdAt" : "1629289609699"
        }
      }
    },
    "executionLogsPage" : {
      "title" : "ExecutionLogsPage",
      "description" : "Entity which contains information about log messages for multiple executors.",
      "type" : "object",
      "properties" : {
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Number of results in the page.",
          "readOnly" : true
        },
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Page number.",
          "readOnly" : true
        },
        "resources" : {
          "type" : "array",
          "description" : "Links to the executors' logs messages",
          "items" : {
            "$ref" : "#/definitions/executorLog"
          }
        }
      },
      "example" : {
        "pageSize" : 2,
        "page" : 0,
        "resources" : [ {
          "executorPath" : "generator",
          "link" : {
            "href" : "https://autopilot.com/api/v1/executions/T000000R0-0000001697801066943-b78ee2d5ebb549df93a0167575657608-1/logs/generator",
            "rel" : "self"
          }
        }, {
          "executorPath" : "generator.void",
          "link" : {
            "href" : "https://autopilot.com/api/v1/executions/T000000R0-0000001697801066943-b78ee2d5ebb549df93a0167575657608-1/logs/generator.void",
            "rel" : "self"
          }
        } ]
      }
    },
    "event" : {
      "title" : "Event",
      "type" : "object",
      "properties" : {
        "id" : {
          "description" : "Event identifier assigned by the Alert Notification service in the moment of receiving the event.",
          "type" : "string"
        },
        "eventType" : {
          "description" : "Identifies the alert cause in the context of an affected resource.",
          "type" : "string"
        },
        "eventTimestamp" : {
          "description" : "The timestamp that specifies when the event was created in the source. Format is in seconds since Unix epoch.",
          "type" : "integer",
          "format" : "int64"
        },
        "severity" : {
          "description" : "Represents the impact in the context of an affected resource.",
          "type" : "string",
          "enum" : [ "INFO", "WARNING", "ERROR", "FATAL" ]
        },
        "category" : {
          "description" : "A property that identifies the category of the event.",
          "type" : "string",
          "enum" : [ "EXCEPTION", "ALERT", "NOTIFICATION" ]
        },
        "subject" : {
          "description" : "Meaningful title of the alert with sufficient details.",
          "type" : "string"
        },
        "body" : {
          "description" : "Meaningful description of the alert with sufficient details.",
          "type" : "string"
        },
        "priority" : {
          "description" : "A property that defines the event urgency.",
          "type" : "integer",
          "minimum" : 1,
          "maximum" : 1000
        },
        "tags" : {
          "description" : "Optional key-value pairs describing the event in details.",
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "region" : {
          "description" : "Identifies the region or datacenter of the resource.",
          "type" : "string"
        },
        "regionType" : {
          "description" : "Identifies the region or datacenter type of the resource.",
          "type" : "string"
        },
        "resource" : {
          "$ref" : "#/definitions/resourceData"
        }
      },
      "example" : {
        "eventType" : "HANADBNotificationAction",
        "eventTimestamp" : 1536579302,
        "severity" : "ERROR",
        "category" : "ALERT",
        "priority" : 500,
        "subject" : "Database system requires update",
        "body" : "Update database system HA0011D to the latest revision.",
        "resource" : {
          "globalAccount" : "baf1519f-b94b-46b8-a6b8-574c75d73e06",
          "subAccount" : "d11d3e6a-658d-4199-9167-e03772971474",
          "resourceGroup" : "19d279b8-d142-4c78-a7fd-bbf7020c0fb7",
          "resourceType" : "database",
          "resourceName" : "f9h",
          "resourceInstance" : "tenant",
          "tags" : {
            "resourceId" : "tenant",
            "environment" : "production"
          }
        },
        "region" : "cf-eu10",
        "regionType" : "sap-cp"
      }
    },
    "error" : {
      "title" : "Error",
      "description" : "Entity which provides more information for an occurred error.",
      "type" : "object",
      "properties" : {
        "code" : {
          "description" : "HTTP status code.",
          "type" : "integer",
          "enum" : [ 400, 401, 403, 404, 405, 406, 409, 410, 413, 415, 429, 500, 503 ]
        },
        "message" : {
          "description" : "Message that describes the error in more details.",
          "type" : "string"
        }
      },
      "required" : [ "code", "message" ]
    },
    "userChoice" : {
      "title" : "UserChoice",
      "description" : "Entity which describes the user choice if the execution is in state `INPUT_REQUIRED`.",
      "type" : "object",
      "properties" : {
        "title" : {
          "description" : "Title of the user choice",
          "type" : "string",
          "maxLength" : 64
        },
        "options" : {
          "description" : "Available options that can be selected.",
          "type" : "object",
          "additionalProperties" : {
            "type" : "string",
            "maxLength" : 32
          }
        }
      }
    },
    "executorOverview" : {
      "title" : "ExecutionOverview",
      "description" : "Entity which describes an execution executor.",
      "type" : "object",
      "required" : [ "alias", "commandId" ],
      "properties" : {
        "alias" : {
          "type" : "string",
          "description" : "Non-unique value which identifies the executor.",
          "readOnly" : true
        },
        "commandId" : {
          "type" : "string",
          "description" : "Identifier of the command managed by the executor.",
          "readOnly" : true
        },
        "subExecutors" : {
          "type" : "array",
          "description" : "Collection of indices which point to the child executors which are part of this executor.",
          "readOnly" : true,
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "example" : {
        "alias" : "restartDatabase",
        "commandId" : "dblm-sapcp:RestartHanaCloudInstance:1",
        "subExecutors" : [ ]
      }
    },
    "executionStatus" : {
      "title" : "ExecutionStatus",
      "description" : "Entity which describes the existing execution statuses.",
      "type" : "string",
      "enum" : [ "RUNNING", "FINISHED", "FAILED", "ABORTED", "PAUSED", "SUSPENDED", "INPUT_REQUIRED" ]
    },
    "executorLog" : {
      "title" : "ExecutorLog",
      "description" : "Information about log messages for a single executor",
      "type" : "object",
      "properties" : {
        "executorPath" : {
          "type" : "string",
          "description" : "Path to the executor.",
          "readOnly" : true
        },
        "link" : {
          "$ref" : "#/definitions/executorLogRef",
          "description" : "Reference for the executor logs.",
          "readOnly" : true
        }
      },
      "example" : {
        "executorPath" : "generator.void",
        "link" : {
          "href" : "https://autopilot.com/api/v1/executions/T000000R0-0000001697801066943-b78ee2d5ebb549df93a0167575657608-1/logs/generator.void",
          "rel" : "self"
        }
      }
    },
    "executorLogRef" : {
      "title" : "ExecutorLogRef",
      "description" : "Reference for the executor logs of a single executor.",
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string",
          "description" : "Hyperlink for the executor logs of the executor.",
          "readOnly" : true,
          "format" : "uri"
        },
        "rel" : {
          "type" : "string",
          "description" : "Type of the reference.",
          "readOnly" : true
        }
      },
      "example" : {
        "href" : "https://autopilot.com/api/v1/executions/T000000R0-0000001697801066943-b78ee2d5ebb549df93a0167575657608-1/logs/generator.void",
        "rel" : "self"
      }
    },
    "actionType" : {
      "title" : "ActionType",
      "description" : "Action types that can be requested on executions. The RESET_AND_RETRY action is DEPRECATED in favor of the RESET action.",
      "type" : "string",
      "enum" : [ "PAUSE", "RESUME", "ABORT", "RETRY", "SUSPEND", "RESET_AND_RETRY", "RESET", "CHOOSE", "EXECUTE_STATUS_LISTENER", "FAIL" ]
    },
    "executionLogMessage" : {
      "title" : "ExecutionLogMessage",
      "description" : "The log message for a single operation performed by an executor (e.g. a repetition).",
      "type" : "object",
      "required" : [ "message", "createdAt" ],
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "Traceability information for an executor operation such as condition, validation, repetition, etc",
          "readOnly" : true
        },
        "createdAt" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time at which the execution log was created. Format is in milliseconds since Unix epoch.",
          "readOnly" : true
        }
      },
      "example" : {
        "message" : "Executing command http-sapcp:HttpRequest:1 \n Input values: {\n  \"method\" : \"GET\",\n  \"url\" : \"https://example.com\",\n  \"timeout\" : \"3\"\n} ",
        "createdAt" : "1605977607954"
      }
    },
    "resourceData" : {
      "title" : "ResourceData",
      "type" : "object",
      "description" : "Used to uniquely identify a resource in the SAP Business Technology Platform, for which this event was created.",
      "properties" : {
        "globalAccount" : {
          "description" : "Identifies the global account of an affected resource.",
          "type" : "string"
        },
        "subAccount" : {
          "description" : "Identifies the subaccount of an affected resource.",
          "type" : "string"
        },
        "resourceGroup" : {
          "description" : "Identifies an additional resource isolation level.",
          "type" : "string"
        },
        "resourceName" : {
          "description" : "Identifies the affected resource name.",
          "type" : "string"
        },
        "resourceType" : {
          "description" : "Identifies the affected resource type.",
          "type" : "string"
        },
        "resourceInstance" : {
          "description" : "Identifies the affected resource instance.",
          "type" : "string"
        },
        "tags" : {
          "description" : "Optional key-value pairs providing additional information.",
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "example" : {
        "globalAccount" : "baf1519f-b94b-46b8-a6b8-574c75d73e06",
        "subAccount" : "d11d3e6a-658d-4199-9167-e03772971474",
        "resourceGroup" : "19d279b8-d142-4c78-a7fd-bbf7020c0fb7",
        "resourceType" : "database",
        "resourceName" : "f9h",
        "resourceInstance" : "tenant",
        "tags" : {
          "resourceId" : "tenant",
          "environment" : "production"
        }
      }
    }
  }
}